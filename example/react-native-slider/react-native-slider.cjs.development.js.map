{"version":3,"file":"react-native-slider.cjs.development.js","sources":["../../src/components/Slider/Slider.style.ts","../../src/constants/animationConfig.ts","../../src/utils/Rect.ts","../../src/components/Slider/Slider.tsx"],"sourcesContent":["import { StyleSheet } from \"react-native\";\n\nconst TRACK_SIZE = 4;\nconst THUMB_SIZE = 20;\n\nconst defaultStyles = StyleSheet.create({\n  container: {\n    height: 40,\n    justifyContent: \"center\",\n  },\n  track: {\n    height: TRACK_SIZE,\n    borderRadius: TRACK_SIZE / 2,\n  },\n  thumb: {\n    position: \"absolute\",\n    width: THUMB_SIZE,\n    height: THUMB_SIZE,\n    borderRadius: THUMB_SIZE / 2,\n  },\n  touchArea: {\n    position: \"absolute\",\n    backgroundColor: \"transparent\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  debugThumbTouchArea: {\n    position: \"absolute\",\n    backgroundColor: \"green\",\n    opacity: 0.5,\n  },\n});\n\nexport { defaultStyles };\n","import { Easing } from \"react-native\";\n\nexport const DEFAULT_ANIMATION_CONFIGS = {\n  spring: {\n    friction: 7,\n    tension: 100,\n  },\n  timing: {\n    duration: 150,\n    easing: Easing.inOut(Easing.ease),\n    delay: 0,\n  },\n};\n","type Args = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n};\n\nclass Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n\n  constructor({ x, y, width, height }: Args) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  containsPoint({ x, y }: Pick<Args, \"x\" | \"y\">) {\n    return (\n      x >= this.x &&\n      y >= this.y &&\n      x <= this.x + this.width &&\n      y <= this.y + this.height\n    );\n  }\n}\n\nexport { Rect };\n","// @ts-nocheck\n\nimport React, { PureComponent } from \"react\";\n\nimport {\n  Animated,\n  Image,\n  PanResponder,\n  View,\n  Easing,\n  ViewPropTypes,\n  I18nManager,\n} from \"react-native\";\n\nimport PropTypes from \"prop-types\";\nimport { defaultStyles } from \"./Slider.style\";\nimport { DEFAULT_ANIMATION_CONFIGS } from \"../../constants/animationConfig\";\nimport { Rect } from \"../../utils/Rect\";\n\nexport default class Slider extends PureComponent {\n  static defaultProps = {\n    value: 0,\n    minimumValue: 0,\n    maximumValue: 1,\n    step: 0,\n    minimumTrackTintColor: \"#3f3f3f\",\n    maximumTrackTintColor: \"#b3b3b3\",\n    thumbTintColor: \"#343434\",\n    thumbTouchSize: { width: 40, height: 40 },\n    debugTouchArea: false,\n    animationType: \"timing\",\n  };\n\n  state = {\n    containerSize: { width: 0, height: 0 },\n    trackSize: { width: 0, height: 0 },\n    thumbSize: { width: 0, height: 0 },\n    allMeasured: false,\n    value: new Animated.Value(this.props.value),\n  };\n\n  componentWillMount() {\n    this._panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: this._handleStartShouldSetPanResponder,\n      onMoveShouldSetPanResponder: this._handleMoveShouldSetPanResponder,\n      onPanResponderGrant: this._handlePanResponderGrant,\n      onPanResponderMove: this._handlePanResponderMove,\n      onPanResponderRelease: this._handlePanResponderEnd,\n      onPanResponderTerminationRequest: this._handlePanResponderRequestEnd,\n      onPanResponderTerminate: this._handlePanResponderEnd,\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const newValue = nextProps.value;\n\n    if (this.props.value !== newValue) {\n      if (this.props.animateTransitions) {\n        this._setCurrentValueAnimated(newValue);\n      } else {\n        this._setCurrentValue(newValue);\n      }\n    }\n  }\n\n  render() {\n    const {\n      minimumValue,\n      maximumValue,\n      minimumTrackTintColor,\n      maximumTrackTintColor,\n      thumbTintColor,\n      thumbImage,\n      styles,\n      style,\n      trackStyle,\n      thumbStyle,\n      debugTouchArea,\n      onValueChange,\n      thumbTouchSize,\n      animationType,\n      animateTransitions,\n      ...other\n    } = this.props;\n    const {\n      value,\n      containerSize,\n      trackSize,\n      thumbSize,\n      allMeasured,\n    } = this.state;\n    const mainStyles = styles || defaultStyles;\n    const thumbLeft = value.interpolate({\n      inputRange: [minimumValue, maximumValue],\n      outputRange: I18nManager.isRTL\n        ? [0, -(containerSize.width - thumbSize.width)]\n        : [0, containerSize.width - thumbSize.width],\n      // extrapolate: 'clamp',\n    });\n    const minimumTrackWidth = value.interpolate({\n      inputRange: [minimumValue, maximumValue],\n      outputRange: [0, containerSize.width - thumbSize.width],\n      // extrapolate: 'clamp',\n    });\n    const valueVisibleStyle = {};\n    if (!allMeasured) {\n      valueVisibleStyle.opacity = 0;\n    }\n\n    const minimumTrackStyle = {\n      position: \"absolute\",\n      width: Animated.add(minimumTrackWidth, thumbSize.width / 2),\n      backgroundColor: minimumTrackTintColor,\n      ...valueVisibleStyle,\n    };\n\n    const touchOverflowStyle = this._getTouchOverflowStyle();\n\n    return (\n      <View\n        {...other}\n        style={[mainStyles.container, style]}\n        onLayout={this._measureContainer}\n      >\n        <View\n          style={[\n            { backgroundColor: maximumTrackTintColor },\n            mainStyles.track,\n            trackStyle,\n          ]}\n          renderToHardwareTextureAndroid\n          onLayout={this._measureTrack}\n        />\n        <Animated.View\n          renderToHardwareTextureAndroid\n          style={[mainStyles.track, trackStyle, minimumTrackStyle]}\n        />\n        <Animated.View\n          onLayout={this._measureThumb}\n          renderToHardwareTextureAndroid\n          style={[\n            { backgroundColor: thumbTintColor },\n            mainStyles.thumb,\n            thumbStyle,\n            {\n              transform: [{ translateX: thumbLeft }, { translateY: 0 }],\n              ...valueVisibleStyle,\n            },\n          ]}\n        >\n          {this._renderThumbImage()}\n        </Animated.View>\n        <View\n          renderToHardwareTextureAndroid\n          style={[defaultStyles.touchArea, touchOverflowStyle]}\n          {...this._panResponder.panHandlers}\n        >\n          {debugTouchArea === true &&\n            this._renderDebugThumbTouchRect(minimumTrackWidth)}\n        </View>\n      </View>\n    );\n  }\n\n  _getPropsForComponentUpdate(props) {\n    const {\n      value,\n      onValueChange,\n      onSlidingStart,\n      onSlidingComplete,\n      style,\n      trackStyle,\n      thumbStyle,\n      ...otherProps\n    } = props;\n\n    return otherProps;\n  }\n\n  _handleStartShouldSetPanResponder = (\n    e: Object /* gestureState: Object */\n  ): boolean =>\n    // Should we become active when the user presses down on the thumb?\n    this._thumbHitTest(e);\n\n  _handleMoveShouldSetPanResponder(/* e: Object, gestureState: Object */): boolean {\n    // Should we become active when the user moves a touch over the thumb?\n    return false;\n  }\n\n  _handlePanResponderGrant = (/* e: Object, gestureState: Object */) => {\n    this._previousLeft = this._getThumbLeft(this._getCurrentValue());\n    this._fireChangeEvent(\"onSlidingStart\");\n  };\n\n  _handlePanResponderMove = (e: Object, gestureState: Object) => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this._setCurrentValue(this._getValue(gestureState));\n    this._fireChangeEvent(\"onValueChange\");\n  };\n\n  _handlePanResponderRequestEnd(e: Object, gestureState: Object) {\n    // Should we allow another component to take over this pan?\n    return false;\n  }\n\n  _handlePanResponderEnd = (e: Object, gestureState: Object) => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this._setCurrentValue(this._getValue(gestureState));\n    this._fireChangeEvent(\"onSlidingComplete\");\n  };\n\n  _measureContainer = (x: Object) => {\n    this._handleMeasure(\"containerSize\", x);\n  };\n\n  _measureTrack = (x: Object) => {\n    this._handleMeasure(\"trackSize\", x);\n  };\n\n  _measureThumb = (x: Object) => {\n    this._handleMeasure(\"thumbSize\", x);\n  };\n\n  _handleMeasure = (name: string, x: Object) => {\n    const { width, height } = x.nativeEvent.layout;\n    const size = { width, height };\n\n    const storeName = `_${name}`;\n    const currentSize = this[storeName];\n    if (\n      currentSize &&\n      width === currentSize.width &&\n      height === currentSize.height\n    ) {\n      return;\n    }\n    this[storeName] = size;\n\n    if (this._containerSize && this._trackSize && this._thumbSize) {\n      this.setState({\n        containerSize: this._containerSize,\n        trackSize: this._trackSize,\n        thumbSize: this._thumbSize,\n        allMeasured: true,\n      });\n    }\n  };\n\n  _getRatio = (value: number) =>\n    (value - this.props.minimumValue) /\n    (this.props.maximumValue - this.props.minimumValue);\n\n  _getThumbLeft = (value: number) => {\n    const nonRtlRatio = this._getRatio(value);\n    const ratio = I18nManager.isRTL ? 1 - nonRtlRatio : nonRtlRatio;\n    return (\n      ratio * (this.state.containerSize.width - this.state.thumbSize.width)\n    );\n  };\n\n  _getValue = (gestureState: Object) => {\n    const length = this.state.containerSize.width - this.state.thumbSize.width;\n    const thumbLeft = this._previousLeft + gestureState.dx;\n\n    const nonRtlRatio = thumbLeft / length;\n    const ratio = I18nManager.isRTL ? 1 - nonRtlRatio : nonRtlRatio;\n\n    if (this.props.step) {\n      return Math.max(\n        this.props.minimumValue,\n        Math.min(\n          this.props.maximumValue,\n          this.props.minimumValue +\n            Math.round(\n              (ratio * (this.props.maximumValue - this.props.minimumValue)) /\n                this.props.step\n            ) *\n              this.props.step\n        )\n      );\n    }\n    return Math.max(\n      this.props.minimumValue,\n      Math.min(\n        this.props.maximumValue,\n        ratio * (this.props.maximumValue - this.props.minimumValue) +\n          this.props.minimumValue\n      )\n    );\n  };\n\n  _getCurrentValue = () => this.state.value.__getValue();\n\n  _setCurrentValue = (value: number) => {\n    this.state.value.setValue(value);\n  };\n\n  _setCurrentValueAnimated = (value: number) => {\n    const animationType = this.props.animationType;\n    const animationConfig = Object.assign(\n      {},\n      DEFAULT_ANIMATION_CONFIGS[animationType],\n      this.props.animationConfig,\n      {\n        toValue: value,\n      }\n    );\n\n    Animated[animationType](this.state.value, animationConfig).start();\n  };\n\n  _fireChangeEvent = event => {\n    if (this.props[event]) {\n      this.props[event](this._getCurrentValue());\n    }\n  };\n\n  _getTouchOverflowSize = () => {\n    const state = this.state;\n    const props = this.props;\n\n    const size = {};\n    if (state.allMeasured === true) {\n      size.width = Math.max(\n        0,\n        props.thumbTouchSize.width - state.thumbSize.width\n      );\n      size.height = Math.max(\n        0,\n        props.thumbTouchSize.height - state.containerSize.height\n      );\n    }\n\n    return size;\n  };\n\n  _getTouchOverflowStyle = () => {\n    const { width, height } = this._getTouchOverflowSize();\n\n    const touchOverflowStyle = {};\n    if (width !== undefined && height !== undefined) {\n      const verticalMargin = -height / 2;\n      touchOverflowStyle.marginTop = verticalMargin;\n      touchOverflowStyle.marginBottom = verticalMargin;\n\n      const horizontalMargin = -width / 2;\n      touchOverflowStyle.marginLeft = horizontalMargin;\n      touchOverflowStyle.marginRight = horizontalMargin;\n    }\n\n    if (this.props.debugTouchArea === true) {\n      touchOverflowStyle.backgroundColor = \"orange\";\n      touchOverflowStyle.opacity = 0.5;\n    }\n\n    return touchOverflowStyle;\n  };\n\n  _thumbHitTest = (e: Object) => {\n    const nativeEvent = e.nativeEvent;\n    const thumbTouchRect = this._getThumbTouchRect();\n    return thumbTouchRect.containsPoint({\n      x: nativeEvent.locationX,\n      y: nativeEvent.locationY,\n    });\n  };\n\n  _getThumbTouchRect = () => {\n    const state = this.state;\n    const props = this.props;\n    const touchOverflowSize = this._getTouchOverflowSize();\n\n    return new Rect({\n      x:\n        touchOverflowSize.width / 2 +\n        this._getThumbLeft(this._getCurrentValue()) +\n        (state.thumbSize.width - props.thumbTouchSize.width) / 2,\n      y:\n        touchOverflowSize.height / 2 +\n        (state.containerSize.height - props.thumbTouchSize.height) / 2,\n      width: props.thumbTouchSize.width,\n      height: props.thumbTouchSize.height,\n    });\n  };\n\n  _renderDebugThumbTouchRect = thumbLeft => {\n    const thumbTouchRect = this._getThumbTouchRect();\n    const positionStyle = {\n      left: thumbLeft,\n      top: thumbTouchRect.y,\n      width: thumbTouchRect.width,\n      height: thumbTouchRect.height,\n    };\n\n    return (\n      <Animated.View\n        style={[defaultStyles.debugThumbTouchArea, positionStyle]}\n        pointerEvents=\"none\"\n      />\n    );\n  };\n\n  _renderThumbImage = () => {\n    const { thumbImage } = this.props;\n\n    if (!thumbImage) return;\n\n    return <Image source={thumbImage} />;\n  };\n}\n"],"names":["TRACK_SIZE","THUMB_SIZE","defaultStyles","StyleSheet","create","container","height","justifyContent","track","borderRadius","thumb","position","width","touchArea","backgroundColor","top","left","right","bottom","debugThumbTouchArea","opacity","DEFAULT_ANIMATION_CONFIGS","spring","friction","tension","timing","duration","easing","Easing","inOut","ease","delay","Rect","x","y","containsPoint","Slider","containerSize","trackSize","thumbSize","allMeasured","value","Animated","Value","props","e","_thumbHitTest","_previousLeft","_getThumbLeft","_getCurrentValue","_fireChangeEvent","gestureState","disabled","_setCurrentValue","_getValue","_handleMeasure","name","nativeEvent","layout","size","storeName","currentSize","_containerSize","_trackSize","_thumbSize","setState","minimumValue","maximumValue","nonRtlRatio","_getRatio","ratio","I18nManager","isRTL","state","length","thumbLeft","dx","step","Math","max","min","round","__getValue","setValue","animationType","animationConfig","Object","assign","toValue","start","event","thumbTouchSize","_getTouchOverflowSize","touchOverflowStyle","undefined","verticalMargin","marginTop","marginBottom","horizontalMargin","marginLeft","marginRight","debugTouchArea","thumbTouchRect","_getThumbTouchRect","locationX","locationY","touchOverflowSize","positionStyle","React","View","style","pointerEvents","thumbImage","Image","source","componentWillMount","_panResponder","PanResponder","onStartShouldSetPanResponder","_handleStartShouldSetPanResponder","onMoveShouldSetPanResponder","_handleMoveShouldSetPanResponder","onPanResponderGrant","_handlePanResponderGrant","onPanResponderMove","_handlePanResponderMove","onPanResponderRelease","_handlePanResponderEnd","onPanResponderTerminationRequest","_handlePanResponderRequestEnd","onPanResponderTerminate","componentWillReceiveProps","nextProps","newValue","animateTransitions","_setCurrentValueAnimated","render","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","styles","trackStyle","thumbStyle","onValueChange","other","mainStyles","interpolate","inputRange","outputRange","minimumTrackWidth","valueVisibleStyle","minimumTrackStyle","add","_getTouchOverflowStyle","onLayout","_measureContainer","renderToHardwareTextureAndroid","_measureTrack","_measureThumb","transform","translateX","translateY","_renderThumbImage","panHandlers","_renderDebugThumbTouchRect","_getPropsForComponentUpdate","otherProps","PureComponent"],"mappings":"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"}