{"version":3,"file":"react-native-slider.cjs.development.js","sources":["../../src/components/Slider/Slider.style.ts","../../src/components/ThumbImage/ThumbImage.tsx","../../src/utils/Rect.ts","../../src/constants/animationConfig.ts","../../src/utils/helper.ts","../../src/components/DebugThumbTouchRect/DebugThumbTouchRect.tsx","../../src/components/Slider/Slider.tsx"],"sourcesContent":["import { StyleSheet } from \"react-native\";\n\nconst TRACK_SIZE = 4;\nconst THUMB_SIZE = 20;\n\nconst defaultStyles = StyleSheet.create({\n  container: {\n    height: 40,\n    justifyContent: \"center\",\n  },\n  track: {\n    height: TRACK_SIZE,\n    borderRadius: TRACK_SIZE / 2,\n  },\n  thumb: {\n    position: \"absolute\",\n    width: THUMB_SIZE,\n    height: THUMB_SIZE,\n    borderRadius: THUMB_SIZE / 2,\n  },\n  touchArea: {\n    position: \"absolute\",\n    backgroundColor: \"transparent\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  debugThumbTouchArea: {\n    position: \"absolute\",\n    backgroundColor: \"green\",\n    opacity: 0.5,\n  },\n});\n\nexport { defaultStyles };\n","import React from \"react\";\nimport { Image } from \"react-native\";\nimport { SliderProps } from \"../Slider/Slider.type\";\n\nconst ThumbImage: React.FC<Pick<SliderProps, \"thumbImage\">> = props => {\n  const { thumbImage } = props;\n\n  if (!thumbImage) {\n    return null;\n  }\n\n  return <Image source={thumbImage} />;\n};\n\nexport { ThumbImage };\n","type Args = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n};\n\nclass Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n\n  constructor({ x, y, width, height }: Args) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  containsPoint({ x, y }: Pick<Args, \"x\" | \"y\">) {\n    return (\n      x >= this.x &&\n      y >= this.y &&\n      x <= this.x + this.width &&\n      y <= this.y + this.height\n    );\n  }\n}\n\nexport { Rect };\n","import { Easing } from \"react-native\";\n\nexport const DEFAULT_ANIMATION_CONFIGS = {\n  spring: {\n    friction: 7,\n    tension: 100,\n  },\n  timing: {\n    duration: 150,\n    easing: Easing.inOut(Easing.ease),\n    delay: 0,\n  },\n};\n","import { Animated } from \"react-native\";\nimport { SliderProps } from \"../components/Slider/Slider.type\";\nimport { DEFAULT_ANIMATION_CONFIGS } from \"../constants/animationConfig\";\n\nexport const setCurrentValue = (\n  currentValue: Animated.Value,\n  value: number\n) => {\n  currentValue.setValue(value);\n};\n\ntype SetCurrentValueAnimatedArgs = Pick<\n  SliderProps,\n  \"value\" | \"animationType\" | \"animationConfig\"\n> & {\n  currentValue: Animated.Value;\n};\n\nexport const setCurrentValueAnimated = (args: SetCurrentValueAnimatedArgs) => {\n  const { value, animationType, animationConfig, currentValue } = args;\n\n  const customAnimationConfig = {\n    ...DEFAULT_ANIMATION_CONFIGS[animationType],\n    ...animationConfig,\n    toValue: value,\n  };\n\n  Animated[animationType](currentValue, customAnimationConfig).start();\n};\n\nexport const getCurrentValue = (currentValue: Animated.Value) =>\n  (currentValue as any).__getValue();\n","import React from \"react\";\nimport { Animated } from \"react-native\";\nimport { SliderProps } from \"../Slider/Slider.type\";\nimport { Rect } from \"../../utils/Rect\";\nimport { defaultStyles } from \"../Slider/Slider.style\";\n\ntype DebugThumbTouchRectProps = Pick<SliderProps, \"debugTouchArea\"> & {\n  thumbLeft: Animated.AnimatedInterpolation;\n  thumbTouchRect: Rect | undefined;\n};\n\nconst DebugThumbTouchRect: React.FC<DebugThumbTouchRectProps> = props => {\n  const { debugTouchArea, thumbLeft, thumbTouchRect } = props;\n  if (!debugTouchArea || !thumbTouchRect) {\n    return null;\n  }\n\n  const positionStyle = {\n    left: thumbLeft,\n    top: thumbTouchRect.y,\n    width: thumbTouchRect.width,\n    height: thumbTouchRect.height,\n  };\n\n  return (\n    <Animated.View\n      style={[defaultStyles.debugThumbTouchArea, positionStyle]}\n      pointerEvents=\"none\"\n    />\n  );\n};\n\nexport { DebugThumbTouchRect };\n","import React, { useState, useEffect, useRef } from \"react\";\n\nimport {\n  Animated,\n  PanResponder,\n  View,\n  I18nManager,\n  GestureResponderEvent,\n  PanResponderGestureState,\n  PanResponderCallbacks,\n  LayoutChangeEvent,\n  PanResponderInstance,\n} from \"react-native\";\nimport { SliderProps, SliderPropsEvents, LayoutEvent } from \"./Slider.type\";\nimport { defaultStyles } from \"./Slider.style\";\nimport { ThumbImage } from \"../ThumbImage/ThumbImage\";\nimport { Rect } from \"../../utils/Rect\";\nimport { getCurrentValue, setCurrentValueAnimated } from \"../../utils/helper\";\nimport { DebugThumbTouchRect } from \"../DebugThumbTouchRect/DebugThumbTouchRect\";\n\nconst initialState = {\n  width: 0,\n  height: 0,\n};\n\nconst sizes: {\n  [key: string]: {\n    width: number;\n    height: number;\n  };\n} = {};\n\nconst Slider: React.FC<SliderProps> = props => {\n  let panResponder = useRef<PanResponderInstance | null>(null);\n\n  const {\n    animationConfig,\n    animateTransitions,\n    animationType = \"timing\",\n    debugTouchArea = false,\n    maximumTrackTintColor = \"#b3b3b3\",\n    maximumValue = 1,\n    minimumTrackTintColor = \"#3f3f3f\",\n    minimumValue = 0,\n    step = 0,\n    styles,\n    style,\n    thumbImage,\n    thumbStyle,\n    thumbTintColor = \"#343434\",\n    thumbTouchSize = { width: 40, height: 40 },\n    trackStyle,\n    value = 0,\n    disabled,\n  } = props;\n\n  let previousLeft: any;\n  const [containerSize, setContainerSize] = useState(initialState);\n  const [, setTrackSize] = useState(initialState);\n  const [thumbSize, setThumbSize] = useState(initialState);\n  const [allMeasured, setAllMeasured] = useState(false);\n  const [currentValue, setCurrentValue] = useState(new Animated.Value(value));\n\n  useEffect(() => {\n    panResponder.current = PanResponder.create({\n      onStartShouldSetPanResponder: handleStartShouldSetPanResponder,\n      onMoveShouldSetPanResponder: handleMoveShouldSetPanResponder,\n      onPanResponderGrant: handlePanResponderGrant,\n      onPanResponderMove: handlePanResponderMove,\n      onPanResponderRelease: handlePanResponderEnd,\n      onPanResponderTerminationRequest: handlePanResponderRequestEnd,\n      onPanResponderTerminate: handlePanResponderEnd,\n    });\n  }, []);\n\n  useEffect(() => {\n    if (animateTransitions) {\n      setCurrentValueAnimated({\n        value,\n        currentValue,\n        animationConfig,\n        animationType,\n      });\n    } else {\n      setCurrentValue(new Animated.Value(value));\n    }\n  }, [value]);\n\n  const mainStyles = styles || defaultStyles;\n  const thumbLeft = currentValue.interpolate({\n    inputRange: [minimumValue, maximumValue],\n    outputRange: I18nManager.isRTL\n      ? [0, -(containerSize.width - thumbSize.width)]\n      : [0, containerSize.width - thumbSize.width],\n  });\n\n  const getValue = (gestureState: PanResponderGestureState) => {\n    const thumbLeft = previousLeft + gestureState.dx;\n\n    const nonRtlRatio = thumbLeft / length;\n    const ratio = I18nManager.isRTL ? 1 - nonRtlRatio : nonRtlRatio;\n\n    if (step) {\n      return Math.max(\n        minimumValue,\n        Math.min(\n          maximumValue,\n          minimumValue +\n            Math.round((ratio * (maximumValue - minimumValue)) / step) * step\n        )\n      );\n    }\n    return Math.max(\n      minimumValue,\n      Math.min(\n        maximumValue,\n        ratio * (maximumValue - minimumValue) + minimumValue\n      )\n    );\n  };\n\n  const handlePanResponderMove: PanResponderCallbacks[\"onPanResponderMove\"] = (\n    _,\n    gestureState\n  ) => {\n    if (disabled) {\n      return;\n    }\n\n    setCurrentValue(new Animated.Value(getValue(gestureState)));\n    fireChangeEvent(\"onValueChange\");\n  };\n\n  const handlePanResponderRequestEnd: PanResponderCallbacks[\"onPanResponderTerminationRequest\"] = () => {\n    // Should we allow another component to take over this pan?\n    return false;\n  };\n\n  const handlePanResponderEnd: PanResponderCallbacks[\"onPanResponderEnd\"] = (\n    _,\n    gestureState\n  ) => {\n    if (disabled) {\n      return;\n    }\n\n    setCurrentValue(new Animated.Value(getValue(gestureState)));\n    fireChangeEvent(\"onSlidingComplete\");\n  };\n\n  const handleMeasure = (name: LayoutEvent, x: LayoutChangeEvent) => {\n    const { width, height } = x.nativeEvent.layout;\n    const size = { width, height };\n\n    const currentSize = sizes[name];\n    if (\n      currentSize &&\n      width === currentSize.width &&\n      height === currentSize.height\n    ) {\n      return;\n    }\n\n    sizes[name] = size;\n\n    if (sizes.containerSize && sizes.trackSize && sizes.thumbSize) {\n      setContainerSize(sizes.containerSize);\n      setTrackSize(sizes.trackSize);\n      setThumbSize(sizes.thumbSize);\n      setAllMeasured(true);\n    }\n  };\n\n  const onLayoutChange = (eventName: LayoutEvent) => (\n    event: LayoutChangeEvent\n  ) => handleMeasure(eventName, event);\n\n  const measureContainer = onLayoutChange(\"containerSize\");\n\n  const measureTrack = onLayoutChange(\"trackSize\");\n\n  const measureThumb = onLayoutChange(\"thumbSize\");\n\n  const minimumTrackWidth = currentValue.interpolate({\n    inputRange: [minimumValue, maximumValue],\n    outputRange: [0, containerSize.width - thumbSize.width],\n  });\n\n  const fireChangeEvent = (event: SliderPropsEvents) => {\n    props[event]?.(getCurrentValue(currentValue));\n  };\n\n  const handlePanResponderGrant = () => {\n    previousLeft = getThumbLeft(getCurrentValue(currentValue));\n    fireChangeEvent(\"onSlidingStart\");\n  };\n\n  const getTouchOverflowSize = () => {\n    const size: { width?: number; height?: number } = {};\n    if (allMeasured) {\n      size.width = Math.max(0, thumbTouchSize.width - thumbSize.width);\n      size.height = Math.max(0, thumbTouchSize.height - containerSize.height);\n    }\n\n    return size;\n  };\n\n  const getTouchOverflowStyle = () => {\n    const { width, height } = getTouchOverflowSize();\n\n    const touchOverflowStyle: {\n      backgroundColor?: string;\n      marginBottom?: number;\n      marginLeft?: number;\n      marginRight?: number;\n      marginTop?: number;\n      opacity?: number;\n    } = {};\n\n    if (width !== undefined && height !== undefined) {\n      const verticalMargin = -height / 2;\n      touchOverflowStyle.marginTop = verticalMargin;\n      touchOverflowStyle.marginBottom = verticalMargin;\n\n      const horizontalMargin = -width / 2;\n      touchOverflowStyle.marginLeft = horizontalMargin;\n      touchOverflowStyle.marginRight = horizontalMargin;\n    }\n\n    if (debugTouchArea) {\n      touchOverflowStyle.backgroundColor = \"orange\";\n      touchOverflowStyle.opacity = 0.5;\n    }\n\n    return touchOverflowStyle;\n  };\n\n  const getRatio = (value: number) =>\n    (value - minimumValue) / (maximumValue - minimumValue);\n\n  const getThumbLeft = (value: number) => {\n    const nonRtlRatio = getRatio(value);\n    const ratio = I18nManager.isRTL ? 1 - nonRtlRatio : nonRtlRatio;\n    return ratio * (containerSize.width - thumbSize.width);\n  };\n\n  const handleStartShouldSetPanResponder = (\n    e: GestureResponderEvent\n  ): boolean => {\n    // Should we become active when the user presses down on the thumb?\n    const nativeEvent = e.nativeEvent;\n    const thumbTouchRect = getThumbTouchRect();\n    return (\n      thumbTouchRect?.containsPoint({\n        x: nativeEvent.locationX,\n        y: nativeEvent.locationY,\n      }) ?? false\n    );\n  };\n\n  const handleMoveShouldSetPanResponder = () => {\n    // Should we become active when the user moves a touch over the thumb?\n    return false;\n  };\n\n  const getThumbTouchRect = () => {\n    const touchOverflowSize = getTouchOverflowSize();\n\n    if (!touchOverflowSize.width || !touchOverflowSize.height) {\n      return;\n    }\n\n    return new Rect({\n      x:\n        touchOverflowSize.width / 2 +\n        getThumbLeft(getCurrentValue(currentValue)) +\n        (thumbSize.width - thumbTouchSize.width) / 2,\n      y:\n        touchOverflowSize.height / 2 +\n        (containerSize.height - thumbTouchSize.height) / 2,\n      width: thumbTouchSize.width,\n      height: thumbTouchSize.height,\n    });\n  };\n\n  const valueVisibleStyle: { opacity?: number } = {};\n\n  if (!allMeasured) {\n    valueVisibleStyle.opacity = 0;\n  }\n\n  const minimumTrackStyle = {\n    position: \"absolute\",\n    width: Animated.add(minimumTrackWidth, thumbSize.width / 2),\n    backgroundColor: minimumTrackTintColor,\n    ...valueVisibleStyle,\n  };\n\n  const touchOverflowStyle = getTouchOverflowStyle();\n\n  return (\n    <View\n      {...props}\n      style={[mainStyles.container, style]}\n      onLayout={measureContainer}\n    >\n      <View\n        style={[\n          { backgroundColor: maximumTrackTintColor },\n          mainStyles.track,\n          trackStyle,\n        ]}\n        renderToHardwareTextureAndroid\n        onLayout={measureTrack}\n      />\n      <Animated.View\n        renderToHardwareTextureAndroid\n        style={[mainStyles.track, trackStyle, minimumTrackStyle]}\n      />\n      <Animated.View\n        onLayout={measureThumb}\n        renderToHardwareTextureAndroid\n        style={[\n          { backgroundColor: thumbTintColor },\n          mainStyles.thumb,\n          thumbStyle,\n          {\n            transform: [{ translateX: thumbLeft }, { translateY: 0 }],\n            ...valueVisibleStyle,\n          },\n        ]}\n      >\n        <ThumbImage thumbImage={thumbImage} />\n      </Animated.View>\n      <View\n        renderToHardwareTextureAndroid\n        style={[defaultStyles.touchArea, touchOverflowStyle]}\n        {...panResponder.current?.panHandlers}\n      >\n        <DebugThumbTouchRect\n          debugTouchArea={debugTouchArea}\n          thumbLeft={minimumTrackWidth}\n          thumbTouchRect={getThumbTouchRect()}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default React.memo(Slider);\n"],"names":["TRACK_SIZE","THUMB_SIZE","defaultStyles","StyleSheet","create","container","height","justifyContent","track","borderRadius","thumb","position","width","touchArea","backgroundColor","top","left","right","bottom","debugThumbTouchArea","opacity","ThumbImage","props","thumbImage","React","Image","source","Rect","x","y","containsPoint","DEFAULT_ANIMATION_CONFIGS","spring","friction","tension","timing","duration","easing","Easing","inOut","ease","delay","setCurrentValueAnimated","args","value","animationType","animationConfig","currentValue","customAnimationConfig","toValue","Animated","start","getCurrentValue","__getValue","DebugThumbTouchRect","debugTouchArea","thumbLeft","thumbTouchRect","positionStyle","View","style","pointerEvents","initialState","sizes","Slider","panResponder","useRef","animateTransitions","maximumTrackTintColor","maximumValue","minimumTrackTintColor","minimumValue","step","styles","thumbStyle","thumbTintColor","thumbTouchSize","trackStyle","disabled","previousLeft","useState","containerSize","setContainerSize","setTrackSize","thumbSize","setThumbSize","allMeasured","setAllMeasured","Value","setCurrentValue","useEffect","current","PanResponder","onStartShouldSetPanResponder","handleStartShouldSetPanResponder","onMoveShouldSetPanResponder","handleMoveShouldSetPanResponder","onPanResponderGrant","handlePanResponderGrant","onPanResponderMove","handlePanResponderMove","onPanResponderRelease","handlePanResponderEnd","onPanResponderTerminationRequest","handlePanResponderRequestEnd","onPanResponderTerminate","mainStyles","interpolate","inputRange","outputRange","I18nManager","isRTL","getValue","gestureState","dx","nonRtlRatio","length","ratio","Math","max","min","round","_","fireChangeEvent","handleMeasure","name","nativeEvent","layout","size","currentSize","trackSize","onLayoutChange","eventName","event","measureContainer","measureTrack","measureThumb","minimumTrackWidth","getThumbLeft","getTouchOverflowSize","getTouchOverflowStyle","touchOverflowStyle","undefined","verticalMargin","marginTop","marginBottom","horizontalMargin","marginLeft","marginRight","getRatio","e","getThumbTouchRect","locationX","locationY","touchOverflowSize","valueVisibleStyle","minimumTrackStyle","add","onLayout","renderToHardwareTextureAndroid","transform","translateX","translateY","panHandlers","memo"],"mappings":"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"}