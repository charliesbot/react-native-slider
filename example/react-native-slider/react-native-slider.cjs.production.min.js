"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e,t=require("react"),n=(e=t)&&"object"==typeof e&&"default"in e?e.default:e,i=require("react-native");function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}function r(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t.indexOf(n=r[i])>=0||(a[n]=e[n]);return a}var o=i.StyleSheet.create({container:{height:40,justifyContent:"center"},track:{height:4,borderRadius:2},thumb:{position:"absolute",width:20,height:20,borderRadius:10},touchArea:{position:"absolute",backgroundColor:"transparent",top:0,left:0,right:0,bottom:0},debugThumbTouchArea:{position:"absolute",backgroundColor:"green",opacity:.5}}),u={spring:{friction:7,tension:100},timing:{duration:150,easing:i.Easing.inOut(i.Easing.ease),delay:0}},h=function(){function e(e){var t=e.y,n=e.width,i=e.height;this.x=e.x,this.y=t,this.width=n,this.height=i}return e.prototype.containsPoint=function(e){var t=e.x,n=e.y;return t>=this.x&&n>=this.y&&t<=this.x+this.width&&n<=this.y+this.height},e}(),s=function(e){var t,s;function m(){var t;return(t=e.apply(this,arguments)||this).state={containerSize:{width:0,height:0},trackSize:{width:0,height:0},thumbSize:{width:0,height:0},allMeasured:!1,value:new i.Animated.Value(t.props.value)},t._handleStartShouldSetPanResponder=function(e){return t._thumbHitTest(e)},t._handlePanResponderGrant=function(){t._previousLeft=t._getThumbLeft(t._getCurrentValue()),t._fireChangeEvent("onSlidingStart")},t._handlePanResponderMove=function(e,n){t.props.disabled||(t._setCurrentValue(t._getValue(n)),t._fireChangeEvent("onValueChange"))},t._handlePanResponderEnd=function(e,n){t.props.disabled||(t._setCurrentValue(t._getValue(n)),t._fireChangeEvent("onSlidingComplete"))},t._measureContainer=function(e){t._handleMeasure("containerSize",e)},t._measureTrack=function(e){t._handleMeasure("trackSize",e)},t._measureThumb=function(e){t._handleMeasure("thumbSize",e)},t._handleMeasure=function(e,n){var i=n.nativeEvent.layout,a=i.width,r=i.height,o="_"+e,u=t[o];u&&a===u.width&&r===u.height||(t[o]={width:a,height:r},t._containerSize&&t._trackSize&&t._thumbSize&&t.setState({containerSize:t._containerSize,trackSize:t._trackSize,thumbSize:t._thumbSize,allMeasured:!0}))},t._getRatio=function(e){return(e-t.props.minimumValue)/(t.props.maximumValue-t.props.minimumValue)},t._getThumbLeft=function(e){var n=t._getRatio(e);return(i.I18nManager.isRTL?1-n:n)*(t.state.containerSize.width-t.state.thumbSize.width)},t._getValue=function(e){var n=(t._previousLeft+e.dx)/(t.state.containerSize.width-t.state.thumbSize.width),a=i.I18nManager.isRTL?1-n:n;return t.props.step?Math.max(t.props.minimumValue,Math.min(t.props.maximumValue,t.props.minimumValue+Math.round(a*(t.props.maximumValue-t.props.minimumValue)/t.props.step)*t.props.step)):Math.max(t.props.minimumValue,Math.min(t.props.maximumValue,a*(t.props.maximumValue-t.props.minimumValue)+t.props.minimumValue))},t._getCurrentValue=function(){return t.state.value.__getValue()},t._setCurrentValue=function(e){t.state.value.setValue(e)},t._setCurrentValueAnimated=function(e){var n=t.props.animationType,a=Object.assign({},u[n],t.props.animationConfig,{toValue:e});i.Animated[n](t.state.value,a).start()},t._fireChangeEvent=function(e){t.props[e]&&t.props[e](t._getCurrentValue())},t._getTouchOverflowSize=function(){var e=t.state,n=t.props,i={};return!0===e.allMeasured&&(i.width=Math.max(0,n.thumbTouchSize.width-e.thumbSize.width),i.height=Math.max(0,n.thumbTouchSize.height-e.containerSize.height)),i},t._getTouchOverflowStyle=function(){var e=t._getTouchOverflowSize(),n=e.width,i=e.height,a={};if(void 0!==n&&void 0!==i){var r=-i/2;a.marginTop=r,a.marginBottom=r;var o=-n/2;a.marginLeft=o,a.marginRight=o}return!0===t.props.debugTouchArea&&(a.backgroundColor="orange",a.opacity=.5),a},t._thumbHitTest=function(e){var n=e.nativeEvent;return t._getThumbTouchRect().containsPoint({x:n.locationX,y:n.locationY})},t._getThumbTouchRect=function(){var e=t.state,n=t.props,i=t._getTouchOverflowSize();return new h({x:i.width/2+t._getThumbLeft(t._getCurrentValue())+(e.thumbSize.width-n.thumbTouchSize.width)/2,y:i.height/2+(e.containerSize.height-n.thumbTouchSize.height)/2,width:n.thumbTouchSize.width,height:n.thumbTouchSize.height})},t._renderDebugThumbTouchRect=function(e){var a=t._getThumbTouchRect();return n.createElement(i.Animated.View,{style:[o.debugThumbTouchArea,{left:e,top:a.y,width:a.width,height:a.height}],pointerEvents:"none"})},t._renderThumbImage=function(){var e=t.props.thumbImage;if(e)return n.createElement(i.Image,{source:e})},t}s=e,(t=m).prototype=Object.create(s.prototype),t.prototype.constructor=t,t.__proto__=s;var l=m.prototype;return l.componentWillMount=function(){this._panResponder=i.PanResponder.create({onStartShouldSetPanResponder:this._handleStartShouldSetPanResponder,onMoveShouldSetPanResponder:this._handleMoveShouldSetPanResponder,onPanResponderGrant:this._handlePanResponderGrant,onPanResponderMove:this._handlePanResponderMove,onPanResponderRelease:this._handlePanResponderEnd,onPanResponderTerminationRequest:this._handlePanResponderRequestEnd,onPanResponderTerminate:this._handlePanResponderEnd})},l.componentWillReceiveProps=function(e){var t=e.value;this.props.value!==t&&(this.props.animateTransitions?this._setCurrentValueAnimated(t):this._setCurrentValue(t))},l.render=function(){var e=this.props,t=e.minimumValue,u=e.maximumValue,h=e.minimumTrackTintColor,s=e.maximumTrackTintColor,m=e.thumbTintColor,l=e.styles,d=e.style,p=e.trackStyle,c=e.thumbStyle,g=e.debugTouchArea,b=r(e,["minimumValue","maximumValue","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","thumbImage","styles","style","trackStyle","thumbStyle","debugTouchArea","onValueChange","thumbTouchSize","animationType","animateTransitions"]),_=this.state,T=_.value,f=_.containerSize,S=_.thumbSize,v=_.allMeasured,w=l||o,y=T.interpolate({inputRange:[t,u],outputRange:i.I18nManager.isRTL?[0,-(f.width-S.width)]:[0,f.width-S.width]}),R=T.interpolate({inputRange:[t,u],outputRange:[0,f.width-S.width]}),V={};v||(V.opacity=0);var C=a({position:"absolute",width:i.Animated.add(R,S.width/2),backgroundColor:h},V),z=this._getTouchOverflowStyle();return n.createElement(i.View,Object.assign({},b,{style:[w.container,d],onLayout:this._measureContainer}),n.createElement(i.View,{style:[{backgroundColor:s},w.track,p],renderToHardwareTextureAndroid:!0,onLayout:this._measureTrack}),n.createElement(i.Animated.View,{renderToHardwareTextureAndroid:!0,style:[w.track,p,C]}),n.createElement(i.Animated.View,{onLayout:this._measureThumb,renderToHardwareTextureAndroid:!0,style:[{backgroundColor:m},w.thumb,c,a({transform:[{translateX:y},{translateY:0}]},V)]},this._renderThumbImage()),n.createElement(i.View,Object.assign({renderToHardwareTextureAndroid:!0,style:[o.touchArea,z]},this._panResponder.panHandlers),!0===g&&this._renderDebugThumbTouchRect(R)))},l._getPropsForComponentUpdate=function(e){return r(e,["value","onValueChange","onSlidingStart","onSlidingComplete","style","trackStyle","thumbStyle"])},l._handleMoveShouldSetPanResponder=function(){return!1},l._handlePanResponderRequestEnd=function(e,t){return!1},m}(t.PureComponent);s.defaultProps={value:0,minimumValue:0,maximumValue:1,step:0,minimumTrackTintColor:"#3f3f3f",maximumTrackTintColor:"#b3b3b3",thumbTintColor:"#343434",thumbTouchSize:{width:40,height:40},debugTouchArea:!1,animationType:"timing"},exports.default=s;
//# sourceMappingURL=react-native-slider.cjs.production.min.js.map
